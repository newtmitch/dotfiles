# at nvim's request
set-option -sg escape-time 100
set-option -g focus-events on

# set window numbering index as 1-based instead of 0-based
set-option -g base-index 1
set -g pane-base-index 1
set-option -g renumber-windows on

# set pane naming (courtesy of Koy)
set -g allow-rename off
set -g pane-border-status top
set -g pane-border-format "#{pane_index}:#{pane_title}"

# detach using prefix+C-d since I usually type that fast without lifting my ctrl-finger
bind C-d detach

# set default shell to zsh. remove if you're not using zsh
set-option -g default-shell /bin/zsh
# set-option -g default-command "exec /usr/local/bin/fish"

# remap prefix to Control + a
unbind a
bind C-a send-prefix
set -g prefix C-a

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf

# quick window cycling
bind C-a last-window
bind Space last-window
# bind-key Space next-window
#  bind-key C-Space previous-window

# Creating new panes / windows
bind-key | split-window -h -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"
# this is actually prefix + "-", but ASCII control codes require referencing unscore instead:
# https://unix.stackexchange.com/a/158298
bind C-_ split-window -v -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"
bind C-c new-window -c "#{pane_current_path}"

# quick pane cycling
# bind-key C-s last-pane
bind-key C-s select-pane -t :.+

# window / pane selection tree
bind b choose-tree
bind B choose-tree -Zw
bind C-b choose-tree

# pane movement
# join another pane into this window
bind-key m command-prompt -p "Merge pane from:"  "join-pane -s '%%'"
# send the current pane to another window
bind-key M command-prompt -p "Merge pane to:"  "join-pane -t '%%'"
# move a pane to its own window
bind-key B break-pane 

# clear window, similar to iTerm Cmd+k: ctrl-alt-k
# bind -n C-k send-keys -R \; clear-history
# bind -n C-k if-shell "ps -o state= -o comm= -t '#{pane_tty}' | \
#     grep -iqE 'nvim$'" \
#     "send-keys C-k" \
#     "send-keys -R \; clear-history"
bind -n C-k if-shell "ps -o state= -o comm= -t '#{pane_tty}' | \
    grep -iqE 'nvim$'" \
    "send-keys C-k" \
    "send-keys -R \; clear-history"

# vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
# Note that this requires installation of the reattach-to-user-namespace command:
# 	brew install reattach-to-user-namespace
# bind-key -T copy-mode-vi v begin-selection
# bind-key -T copy-mode-vi y send -X copy-pipe "reattach-to-user-namespace pbcopy"

# Mouse settings - either "on" for allowing mouse control or "off" to disallow.
# I can't decide whether I like it or not, so I keep both in here to switch
# as my mood changes
setw -g mouse on
# set-option -g mouse-select-pane on
# setw -g mode-mouse off
# set-option -g mouse-select-pane off

#
# Window Style
#
setw -g window-status-current-style fg=green,bg=black,bold

# don't rename windows automatically
set-option -g allow-rename off

#
# Window movement
#
# swap window with top window
bind-key T swap-window -t 1
#/move window to last position
bind-key L move-window -t -1
bind -n C-PPage previous-window
bind -n C-NPage next-window
bind -r S-left { swap-window -t -1; previous-window }
bind -r S-right { swap-window -t +1; next-window }
bind -n C-Up swap-pane -U
bind -n C-Down swap-pane -D
bind -n C-Left select-pane -t :.-
bind -n C-Right select-pane -t :.+

# quick window switching
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9

# set -g status-left '‚≠ê '

# set to 256 color by default
set-option -g default-terminal screen-256color

# set pane colors: pre-tmux 2.9
# set-option -g pane-active-border-bg yellow
# set-option -g pane-active-border-fg blue

# set pane colors: post-tmux 2.9
set-option -g pane-border-style fg=yellow
set-option -g pane-active-border-style fg=blue

# plugins
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-continuum'
# set -g @continuum-restore 'on'
# set -g @plugin 'tmux-plugins/tmux-yank'
# run -b '~/.tmux/plugins/tpm/tpm'

